ARG CUDA_VERSION=12.1.1
ARG CUDNN_VERSION=8
ARG UBUNTU_VERSION=22.04

FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}

ARG OPENCV_VERSION=4.7.0
ARG DEBIAN_FRONTEND=noninteractive
# Install update and upgrade your system:
RUN apt-get update && apt-get upgrade -y
# Generic tools:
RUN apt-get install -y build-essential cmake pkg-config unzip yasm git checkinstall wget
# Image I/O libs:
RUN apt-get install -y libjpeg-dev libpng-dev libtiff-dev
# Video/Audio Libs - FFMPEG, GSTREAMER, x264 and so on:
RUN apt-get install -y libavcodec-dev libavformat-dev libswscale-dev
RUN apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
RUN apt-get install -y libxvidcore-dev x264 libx264-dev libfaac-dev libmp3lame-dev libtheora-dev 
RUN apt-get install -y libfaac-dev libmp3lame-dev libvorbis-dev
# OpenCore - Adaptive Multi Rate Narrow Band (AMRNB) and Wide Band (AMRWB) speech codec:
RUN apt-get install -y libopencore-amrnb-dev libopencore-amrwb-dev
# Python libraries for python3:
RUN apt-get install -y python3-dev python3-pip python3-wheel python3-setuptools
# Parallelism library C++ for CPU:
RUN apt-get install -y libtbb-dev
# Optimization libraries for OpenCV:
RUN apt-get install -y libatlas-base-dev gfortran
# Optional libraries:
RUN apt-get install -y libprotobuf-dev protobuf-compiler
RUN apt-get install -y libgoogle-glog-dev libgflags-dev
RUN apt-get install -y libgphoto2-dev libeigen3-dev libhdf5-dev doxygen
RUN rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install --upgrade pip
COPY requirements.txt /tmp/
RUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt
# clean up
RUN pip3 cache purge
RUN apt-get autoremove -y && apt-get clean

WORKDIR /opt
# Download and unzip OpenCV and opencv_contrib and delte zip files
RUN echo https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
RUN wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
RUN unzip ${OPENCV_VERSION}.zip && rm ${OPENCV_VERSION}.zip
RUN wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip
RUN unzip ${OPENCV_VERSION}.zip && rm ${OPENCV_VERSION}.zip
# Create build folder and switch to it
RUN mkdir /opt/opencv-${OPENCV_VERSION}/build
WORKDIR /opt/opencv-${OPENCV_VERSION}/build
# Cmake configure
RUN cmake \
    -D CMAKE_BUILD_TYPE=RELEASE \
    # Install path will be /usr/local/lib (lib is implicit)
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D WITH_TBB=ON \
    -D ENABLE_FAST_MATH=1 \
    -D CUDA_FAST_MATH=1 \
    -D WITH_CUBLAS=1 \
    -D WITH_CUDA=ON \
    -D BUILD_opencv_cudacodec=OFF \
    -D WITH_CUDNN=ON \
    -D OPENCV_DNN_CUDA=ON \
    -D WITH_V4L=ON \
    -D WITH_QT=OFF \
    -D WITH_OPENGL=ON \
    -D WITH_GSTREAMER=ON \
    -D OPENCV_GENERATE_PKGCONFIG=ON \
    -D OPENCV_PC_FILE_NAME=opencv.pc \
    -D OPENCV_ENABLE_NONFREE=ON \
    -D OPENCV_PYTHON3_INSTALL_PATH=$(python3 -c "import sysconfig; print(sysconfig.get_path('platlib'))") \
    -D PYTHON_EXECUTABLE=$(which python3) \
    -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-${OPENCV_VERSION}/modules \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D INSTALL_C_EXAMPLES=OFF \
    -D BUILD_EXAMPLES=OFF ..
# Make
RUN make -j"$(nproc)" && \
    # Install to /usr/local/lib
    make install && \
    ldconfig
# Remove OpenCV sources and build folder
RUN rm -rf /opt/opencv-${OPENCV_VERSION} && rm -rf /opt/opencv_contrib-${OPENCV_VERSION}
